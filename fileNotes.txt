pass: threadct



Scheduling Strategy

Count numLessonDays
create that many timeLists and that many studentLists
student preference vector of floats size of number of days, fill out

Rank each day of lessons by *lowest* average rank (all students, all times)
[Thursday, Tuesday, Monday, Friday]

for (int i = 0; i < numLessonDays, i++) {
	count number of lessons in day[i] = k

	add each of those lessons to a new timeList[i]

	Rank students by highest average rank on day[i]

	numResults = 0

	(while numResults == 0) {
		int m;
		(for m = 0; m < k-1; m++) {
			(while there are students to add) {
				add highest ranked student to studentList[1]
				if student is hourlong m++;
			}
		}
		(if m = k-1) {
			(while there are students to add) {
				add highest ranked half hour student to studentList[i] 
			}
		}

		run thingy thing on new timelist and studentlist

		if numResults == 0 {
			k--
		}

		else {
			print top
			remove students that were assigned from main student list
		}
	}